version: "3.7"

services:
  docker-symfony-web:
    container_name: docker-symfony-web
    build:
      context: ./docker/nginx
      args:
        UID: $U_ID
    ports:
      - "300:80"
    volumes:
      - ./public:/appdata/www/public
    depends_on:
      - docker-symfony-be

  docker-symfony-be:
    container_name: docker-symfony-be
    build:
      context: ./docker/php
      args:
        UID: $U_ID
    environment:
      PHP_IDE_CONFIG: serverName=Docker
    volumes:
      - ./:/appdata/www
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa
    depends_on:
      - docker-symfony-db

  docker-symfony-db:
    container_name: docker-symfony-db
    image: mysql:8.0
    ports:
      - "40000:3306"
    environment:
      MYSQL_DATABASE: docker_symfony_database
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - docker-symfony-database-data:/var/lib/mysql

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  docker-symfony-database-data: {}

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
